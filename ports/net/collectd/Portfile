# -*- coding: utf-8; mode: tcl; indent-tabs-mode: nil
# -*- vim:fenc=utf-8:ft=tcl:et
# $Id$

PortSystem        1.0

name              collectd
version           4.9.0
revision          0

categories        net sysutils
maintainers       raggi

description       Systems & network statistics collection daemon
long_description  collectd is a daemon which collects system performance \
                  statistics periodically and provides mechanisms to store \
                  the values in a variety of ways, for example in RRD files. \
                  Those statistics can then be used to find current \
                  performance bottlenecks (i.e. performance analysis) \
                  and predict future system load (i.e. capacity planning).

platforms         darwin

homepage          http://collectd.org/
master_sites      http://collectd.org/files/

use_bzip2         yes

checksums         md5    5b2e5f57716f2485a3b4eb57774a3818 \
                  sha1   7a3e0b28248eb061c30221e19fee19c6ba303fb9 \
                  rmd160 225fdc708c745cf35e40e519188e8a72cc35524c

depends_lib       port:pkgconfig

# TODO go for collectdmon? launchctl can do this for us, but, opinions?
startupitem.create      yes
startupitem.name        ${name}
startupitem.executable  "${prefix}/bin/${name}"

post-destroot {
  file mkdir ${prefix}/var/lib/${name}

  foreach badfile [exec find ${destroot} -name perllocal.pod] {
      ui_info "Removing ${badfile}"
      file delete ${badfile}
  }
}

variant debug description "enable debugging" {
  configure.args-append --enable-debug
}

variant nodaemon description "disable daemon" {
  configure.args-append --disable-daemon
}

# Plugin dependency variants:

variant apache description "enable apache plugin" {
  # depends_lib-append port:apache2
  depends_lib-append port:curl
}

variant ascent description "enable ascent plugin" {
  depends_lib-append port:curl
  depends_lib-append port:libxml2
}

variant bind9 description "enable bind plugin" {
  depends_lib-append port:bind9
}

variant curl description "enable curl plugin" {
  depends_lib-append port:curl
}

variant curl_json description "enable curl_json plugin" {
  depends_lib-append port:curl
  depends_lib-append port:yajl
}

variant dbi description "enable dbi plugin" {
  depends_lib-append port:libdbi
}

variant dns description "enable dns plugin" {
  depends_lib-append port:libpcap
}

variant memcached description "enable memcached plugin" {
  depends_lib-append port:libmemcached
}

variant mysql5 description "enable mysql plugin" {
  depends_lib-append port:mysql5
}

variant network description "enable network plugin" {
  depends_lib-append port:libgcrypt
}

variant nginx description "enable nginx plugin" {
  # depends_lib-append port:nginx
  depends_lib-append port:curl
}

variant ntpd description "enable ntpd plugin" {
  depends_lib-append port:openntpd
}

variant nut description "enable nut plugin" {
  depends_lib-append port:nut
}

variant openvpn2 description "enable openvpn plugin" {
  depends_lib-append port:openvpn2
}

# TODO verify this is correct!
variant oracle description "enable oracle plugin" {
  depends_lib-append port:oracle-instantclient
}

variant postgresql84 description "enable postgresql plugin (postgres84)" {
  depends_lib-append port:postgresql84
}

variant snmp description "enable snmp plugin" {
  depends_lib-append port:net-snmp
}

# variant hal description "enable libhal in uuid plugin" {
#   depends_lib-append port:libhal
# }

variant tokyotyrant description "enable tokyotyrant plugin" {
  depends_lib-append port:tokyotyrant
}

variant write_http description "enable write_http plugin" {
  depends_lib-append port:curl
}

variant xmms description "enable xmms plugin" {
  depends_lib-append port:xmms
}

# Output variants:

variant rrdtool description "enable rrdtool plugin" {
  depends_lib-append port:rrdtool
}

variant notify description "enable notify plugin" {
  depends_lib-append port:libnotify
}

variant notify_email description "enable notify_email plugin" {
  depends_lib-append port:libesmtp
}
