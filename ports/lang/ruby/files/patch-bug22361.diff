diff -ur ../ruby-1.8.7-p174.org/hash.c ./hash.c
--- ../ruby-1.8.7-p174.org/hash.c	2009-02-24 02:40:05.000000000 +0900
+++ ./hash.c	2009-11-06 22:59:06.000000000 +0900
@@ -81,7 +81,19 @@
 rb_hash(obj)
     VALUE obj;
 {
-    return rb_funcall(obj, id_hash, 0);
+    VALUE hval = rb_funcall(obj, id_hash, 0);
+  retry:
+    switch (TYPE(hval)) {
+      case T_FIXNUM:
+	return hval;
+
+      case T_BIGNUM:
+	return LONG2FIX(((long*)(RBIGNUM(hval)->digits))[0]);
+
+      default:
+	hval = rb_to_int(hval);
+	goto retry;
+    }
 }
 
 static int
@@ -102,10 +114,7 @@
 	break;
 
       default:
-	hval = rb_funcall(a, id_hash, 0);
-	if (!FIXNUM_P(hval)) {
-	    hval = rb_funcall(hval, '%', 1, INT2FIX(536870923));
-	}
+        hval = rb_hash(a);
 	hnum = (int)FIX2LONG(hval);
     }
     hnum <<= 1;
Only in .: hash.c.orig
diff -ur ../ruby-1.8.7-p174.org/test/ruby/test_hash.rb ./test/ruby/test_hash.rb
--- ../ruby-1.8.7-p174.org/test/ruby/test_hash.rb	2008-06-09 03:25:01.000000000 +0900
+++ ./test/ruby/test_hash.rb	2009-11-06 22:43:45.000000000 +0900
@@ -638,4 +638,15 @@
   def test_hash_hash
     assert_equal({0=>2,11=>1}.hash, {11=>1,0=>2}.hash)
   end
+
+  def test_hash_bignum_hash
+    x = 2<<(32-3)-1
+    assert_equal({x=>1}.hash, {x=>1}.hash)
+    x = 2<<(64-3)-1
+    assert_equal({x=>1}.hash, {x=>1}.hash)
+
+    o = Object.new
+    def o.hash; 2<<100; end
+    assert_equal({x=>1}.hash, {x=>1}.hash)
+  end
 end
